// automatically generated by the FlatBuffers compiler, do not modify

package uk.ac.bristol.star.fbs.feather;

import java.nio.*;
import java.lang.*;
import java.util.*;
import uk.ac.bristol.star.fbs.google.*;

@SuppressWarnings("unused")
public final class Column extends Table {
  public static Column getRootAsColumn(ByteBuffer _bb) { return getRootAsColumn(_bb, new Column()); }
  public static Column getRootAsColumn(ByteBuffer _bb, Column obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public Column __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String name() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public PrimitiveArray values() { return values(new PrimitiveArray()); }
  public PrimitiveArray values(PrimitiveArray obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public byte metadataType() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table metadata(Table obj) { int o = __offset(10); return o != 0 ? __union(obj, o) : null; }
  /**
   * This should (probably) be JSON
   */
  public String userMetadata() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer userMetadataAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer userMetadataInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }

  public static int createColumn(FlatBufferBuilder builder,
      int nameOffset,
      int valuesOffset,
      byte metadata_type,
      int metadataOffset,
      int user_metadataOffset) {
    builder.startObject(5);
    Column.addUserMetadata(builder, user_metadataOffset);
    Column.addMetadata(builder, metadataOffset);
    Column.addValues(builder, valuesOffset);
    Column.addName(builder, nameOffset);
    Column.addMetadataType(builder, metadata_type);
    return Column.endColumn(builder);
  }

  public static void startColumn(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(0, nameOffset, 0); }
  public static void addValues(FlatBufferBuilder builder, int valuesOffset) { builder.addOffset(1, valuesOffset, 0); }
  public static void addMetadataType(FlatBufferBuilder builder, byte metadataType) { builder.addByte(2, metadataType, 0); }
  public static void addMetadata(FlatBufferBuilder builder, int metadataOffset) { builder.addOffset(3, metadataOffset, 0); }
  public static void addUserMetadata(FlatBufferBuilder builder, int userMetadataOffset) { builder.addOffset(4, userMetadataOffset, 0); }
  public static int endColumn(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

